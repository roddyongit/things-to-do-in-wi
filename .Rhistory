# output$summary <- renderPrint({
#    dataset <- datasetInput()
#    summary(dataset)
})
# Show observations
output$view <- renderTable({
thingstodoinwi[,thingstodoinwi$Category==input$var]
})
})
runApp()
runApp()
runApp()
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
str(df)
?read.table
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE,stringsAsFactors=FALSE)
df = thingstodoinwi
str(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
displaydf <- function(category) {
# thingstodoinwi[thingstodoinwi$Category==input$var,]
thingstodoinwi[thingstodoinwi$Category==category,]
}
displaydf("Parks")
df
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
displaydf <- function(category) {
# thingstodoinwi[thingstodoinwi$Category==input$var,]
thingstodoinwi[thingstodoinwi$Category==category,]
}
displaydf("Shopping")
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
displaydf <- function(category) {
# thingstodoinwi[thingstodoinwi$Category==input$var,]
thingstodoinwi[thingstodoinwi$Category==category,]
}
displaydf("Water Parks")
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
displaydf <- function(category) {
# thingstodoinwi[thingstodoinwi$Category==input$var,]
thingstodoinwi[thingstodoinwi$Category==category,]
}
displaydf("Sports")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
str(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
thingstodoinwi[thingstodoinwi$Category == category & thingstodoinwi$City == city,2:6]
shiny::runApp()
shiny::runApp()
shiny::runApp()
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
displaydf <- function(category, city) {
# thingstodoinwi[thingstodoinwi$Category==category,]
thingstodoinwi[thingstodoinwi$Category == category & thingstodoinwi$City == city,2:6]
}
displaydf("Sports","Milwaukee")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?selectInput()
shiny::runApp()
shiny::runApp()
update.packages(ask = FALSE)
shiny::runApp()
shiny::runApp()
shiny::runApp()
choices = setNames(df$Category,df$Category)
choices
choices = setNames(unique(df$Category),unique(df$Category)
choices = setNames(unique(df$Category),unique(df$Category))
choices = setNames(unique(df$Category))
thingstodoinwi <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE)
df = thingstodoinwi
l1 = unique(df$Category)
choices = setNames(l1, l1)
choices
shiny::runApp()
l1 = unique(df$Category)
choices = setNames(l1, l1)
choices
?read.table
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
thingstodoinwi[thingstodoinwi$Category == category & thingstodoinwi$City == city,2:6]
df
row(df)
nrow(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?img
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?if
)
??if()
??if
)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
df
df[df$Category=="Eating Out"]
df[df$Category=="Eating Out",]
df[df$Category=="Eating out",]
nrow(df)
df <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
nrow(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
nrow(df)
df[df$Category=="Eating out",]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dim(df)
head(df[,2:6])
df[df$City=="Milwaukee"]
df[df$City=="Milwaukee",]
df[df$City=="Milwaukee",2:6]
df[df$City=="Milwaukee" & df$Category=="Eating out",2:6]
shiny::runApp()
shiny::runApp()
output$obs <- renderText({
obs = nrow (displaydf(input$category, input$city) )
paste("Number of records found for this selection: ", obs)
})
shiny::runApp()
dim(df)
shiny::runApp()
getwd()
dir()
dir(/www)
dir("/www")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
df <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE,  stringsAsFactors=FALSE)
df <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
summary(df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?contact
?conc
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
df
df[df$City=="Milwaukee"]
df[df$City=="Milwaukee",]
df[df$City=="Milwaukee" $ df$Category=="Eating out",]
df[df$City=="Milwaukee" & df$Category=="Eating out",]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
getwd()
Pitch-presentation-What-To-Do-in-WI
date: `r date()'
Slide With Code
date: `r date()`
date: `r date()`
date:
Welcome! Presentation about application: "Things to do in Wisconsin""
date:   February 20, 2015
First Slide
date:   "February 20, 2015""
date:   "February 20, 2015"
date:   February 20, 2015
date:
)
First Slide
===
= = =
First Slide
========================================================
===
First Slide
First Slide
Welcome
For more details on authoring R presentations click the
First Slide
========================================================
date:
)
# Load the data from a text file...
df <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
library(rCharts)
SchoolsGroup=read.csv("https://raw.github.com/patilv/rChartsTutorials/master/SchoolsGroup.csv")
# These are classifications of NCAA athletic department at public universities in to 4 groups. Please see the blog post where these charts were originally used
# regarding more details on the origins of these data.: http://analyticsandvisualization.blogspot.com/2013/10/subsidies-revenues-and-expenses-of-ncaa.html
tab2=dTable(df[,2], sPaginationType = "full_numbers")
tab2$templates$script = "http://timelyportfolio.github.io/rCharts_dataTable/chart_customsort.html"
tab2$params$table$aoColumns =
list(
list(sType = "string_ignore_null", sTitle = "Group 1"),
list(sType = "string_ignore_null", sTitle = "Group 2"),
list(sType = "string_ignore_null", sTitle = "Group 3"),
list(sType = "string_ignore_null", sTitle = "Group 4")
)
tab2
library(rCharts)
# Load the data from a text file...
df <- read.table("thingstodoinwi.txt", sep="\t", header=TRUE, stringsAsFactors=FALSE)
library(rCharts)
#SchoolsGroup=read.csv("https://raw.github.com/patilv/rChartsTutorials/master/SchoolsGroup.csv")
# These are classifications of NCAA athletic department at public universities in to 4 groups. Please see the blog post where these charts were originally used
# regarding more details on the origins of these data.: http://analyticsandvisualization.blogspot.com/2013/10/subsidies-revenues-and-expenses-of-ncaa.html
tab2=dTable(df[,2], sPaginationType = "full_numbers")
#tab2$templates$script = "http://timelyportfolio.github.io/rCharts_dataTable/chart_customsort.html"
##tab2$params$table$aoColumns =
#   list(
#       list(sType = "string_ignore_null", sTitle = "Group 1"),
#       list(sType = "string_ignore_null", sTitle = "Group 2"),
#       list(sType = "string_ignore_null", sTitle = "Group 3"),
#       list(sType = "string_ignore_null", sTitle = "Group 4")
#   )
tab2
tab2=dTable(df[,2], sPaginationType = "full_numbers")
df
tab2=dTable(df[,], sPaginationType = "full_numbers")
tab2
getwd()
Author("Things-to-do-in-WI-Pres")
author("Things-to-do-in-WI-Pres")
install.packages("devtools")
library(devtools)
install_github('slidify', 'ramnthv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
author("Things-to-do-in-WI-Presentation")
We are so glad you decided to visit Wisconsin
- A positive note...
slidify(index.Rmd)
dir()
getwd()
slidify(index.Rmd)
